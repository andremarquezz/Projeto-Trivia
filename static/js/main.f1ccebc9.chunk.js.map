{"version":3,"sources":["images/trivia.png","images/settings.png","audios/audio_background_game.mp3","pages/Login.jsx","store/actions/index.js","components/Header.jsx","pages/Game.jsx","pages/Settings.jsx","pages/Feedback.jsx","pages/Ranking.jsx","App.js","store/reducers/playerReducer.js","store/reducers/index.js","store/index.js","index.js"],"names":["module","exports","Login","state","user","email","name","isEnterButtonDisabled","validateEmail","test","validateUserInfo","attrAreOk","length","every","error","setState","onInputChange","target","value","fetchGravatar","id","md5","toString","picture","ranking","JSON","parse","localStorage","getItem","newRanking","stringify","score","setItem","setPlayerToken","a","fetch","json","data","token","handlePlayButton","props","dispatchUser","history","push","this","className","alt","src","trivia","data-testid","type","onChange","placeholder","disabled","onClick","to","Component","connect","dispatch","userInfo","Header","settings","player","Game","results","currentQuestion","counter","answers","assertions","btnNextQuestion","colorQuestions","timer","btnDisabled","enableTimer","backgroundAudio","audioControl","audio","Audio","audioBackground","volume","loop","play","intervalTimer","setInterval","prevState","validateToken","responseCode","response_code","removeItem","handleAnswer","correct","correct_answer","incorrect","incorrect_answers","sortAnswers","sort","Math","random","verifyAnswer","userAnswer","innerHTML","difficulty","clearInterval","setScore","setAssertions","scoreLocalStorage","namePlayer","allPlayers","find","nextQuestion","fetchQuestions","API","handleTimer","counterWrong","category","question","he","decode","map","answer","i","key","scoreAction","assertionsAction","Settings","Feedback","handleFeedback","Ranking","players","handleRanking","b","App","exact","path","component","INITIAL_STATE","gravatarEmail","playerReducer","action","rootReducer","combineReducers","game","store","createStore","RootReducer","composeWithDevTools","applyMiddleware","thunk","window","Cypress","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f1ccebc9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trivia.466d153e.png\";","module.exports = __webpack_public_path__ + \"static/media/settings.9272e1c5.png\";","module.exports = __webpack_public_path__ + \"static/media/audio_background_game.5a597645.mp3\";","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport md5 from 'crypto-js/md5';\nimport { playerAction } from '../store/actions';\nimport './Login.css';\nimport trivia from '../images/trivia.png';\n\nclass Login extends Component {\n  state = {\n    user: { email: '', name: '' },\n    isEnterButtonDisabled: true,\n  };\n\n  validateEmail = (email) => {\n    const regex = /\\S+@\\S+\\.\\S+/;\n    return regex.test(email);\n  };\n\n  validateUserInfo = () => {\n    const { user } = this.state;\n    const { email, name } = user;\n    const MAX_LENGTH = 3;\n    const errorCases = [!this.validateEmail(email), name.length < MAX_LENGTH];\n    const attrAreOk = errorCases.every((error) => error === false);\n    this.setState({\n      isEnterButtonDisabled: !attrAreOk,\n    });\n  };\n\n  onInputChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState(\n      ({ user }) => ({\n        user: {\n          ...user,\n          [name]: value,\n        },\n      }),\n      () => {\n        this.validateUserInfo();\n      }\n    );\n  };\n\n  fetchGravatar = () => {\n    const { user } = this.state;\n    const { email, name } = user;\n    const id = md5(email).toString();\n    const picture = `https://www.gravatar.com/avatar/${id}`;\n    const ranking = JSON.parse(localStorage.getItem('ranking')) || [];\n    const newRanking = JSON.stringify([{ name, score: 0, picture }, ...ranking]);\n    localStorage.setItem('ranking', newRanking);\n  };\n\n  setPlayerToken = async () => {\n    const API = 'https://opentdb.com/api_token.php?command=request';\n    const data = await (await fetch(API)).json();\n    const { token } = data;\n    localStorage.setItem('token', token);\n  };\n\n  handlePlayButton = async () => {\n    const { user } = this.state;\n    const { dispatchUser, history } = this.props;\n    await this.setPlayerToken();\n    this.fetchGravatar();\n    dispatchUser(user);\n    history.push('/game');\n  };\n\n  render() {\n    const { user, isEnterButtonDisabled } = this.state;\n    const { email, name } = user;\n    return (\n      <div className=\"container\">\n        <img alt=\"logoGameTrivia\" src={trivia} className=\"loginLogoTrivia\" />\n\n        <section className=\"container \">\n          <input\n            data-testid=\"input-gravatar-email\"\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={this.onInputChange}\n            placeholder=\"Digite seu E-mail\"\n            className=\"form-control\"\n          />\n          <input\n            data-testid=\"input-player-name\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.onInputChange}\n            placeholder=\"Digite seu nome\"\n            className=\"form-control\"\n          />\n        </section>\n        <div className=\"button-login enabled\">\n          <button\n            data-testid=\"btn-play\"\n            type=\"button\"\n            disabled={isEnterButtonDisabled}\n            onClick={this.handlePlayButton}\n            className=\"btn btn-primary\"\n          >\n            Play\n          </button>\n          <Link to=\"/settings\">\n            <button\n              data-testid=\"btn-settings\"\n              type=\"button\"\n              className=\"btn btn-secondary\"\n            >\n              Settings\n            </button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  history: PropTypes.shape({ push: PropTypes.func.isRequired }).isRequired,\n  dispatchUser: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchUser: (user) => dispatch(playerAction(user)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n","export const SET_PLAYER = 'SET_PLAYER';\nexport const SET_SCORE = 'SET_SCORE';\nexport const SET_ASSERTIONS = 'SET_ASSERTIONS';\n\nexport const playerAction = (userInfo) => ({\n  type: SET_PLAYER,\n  userInfo,\n});\n\nexport const scoreAction = (score) => ({\n  type: SET_SCORE,\n  score,\n});\n\nexport const assertionsAction = (assertions) => ({\n  type: SET_ASSERTIONS,\n  assertions,\n});\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport trivia from '../images/trivia.png';\nimport settings from '../images/settings.png';\nimport './Header.css';\n\nclass Header extends Component {\n  render() {\n    const { score } = this.props;\n    const userInfo = JSON.parse(localStorage.getItem('ranking'))[0];\n    return (\n      <header>\n        <div className=\"center-header\">\n          <img\n            src={userInfo.picture}\n            alt=\"imageGravatar\"\n            data-testid=\"header-profile-picture\"\n            className=\"userImage\"\n          />\n          <img alt=\"logoGameTrivia\" src={trivia} className=\"logoTrivia\" />\n          <Link to=\"/settings\">\n            <img className=\"settings\" src={settings} alt=\"logoSettings\" />\n          </Link>\n        </div>\n        <div className=\"userInfo\">\n          <h2 data-testid=\"header-player-name\">{userInfo.name}</h2>\n          <span data-testid=\"header-score\">{`${score} Pontos`}</span>\n        </div>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  score: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  score: state.player.score,\n});\n\nexport default connect(mapStateToProps)(Header);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport './Game.css';\nimport audioBackground from '../audios/audio_background_game.mp3';\nimport { scoreAction, assertionsAction } from '../store/actions';\nimport he from 'he';\n\nclass Game extends Component {\n  state = {\n    results: [],\n    currentQuestion: {},\n    counter: 0,\n    answers: [],\n    assertions: 0,\n    btnNextQuestion: false,\n    colorQuestions: false,\n    timer: 30,\n    btnDisabled: false,\n    enableTimer: true,\n    score: 0,\n  };\n\n  componentDidMount() {\n    this.fetchQuestions();\n    this.intervalTimer();\n    this.backgroundAudio('play');\n  }\n\n  componentDidUpdate() {\n    const { timer } = this.state;\n    if (timer === 0) {\n      clearInterval(this.timer);\n      this.handleTimer();\n    }\n  }\n\n  componentWillUnmount() {\n    this.backgroundAudio('pause');\n  }\n\n  backgroundAudio = (audioControl) => {\n    const audio = new Audio(audioBackground);\n    audio.volume = 0.2;\n    audio.loop = true;\n    if (audioControl === 'play') audio.play();\n    // if (audioControl === 'pause') {\n    //   console.log('entrei');\n    // }\n  };\n  intervalTimer = () => {\n    const ONE_SECOND = 1000;\n    this.timer = setInterval(() => {\n      this.setState((prevState) => ({\n        timer: prevState.timer - 1,\n      }));\n    }, ONE_SECOND);\n  };\n\n  validateToken = (data) => {\n    const { response_code: responseCode, results } = data;\n    const { history } = this.props;\n    const tokenInvalid = 3;\n    if (responseCode === tokenInvalid) {\n      localStorage.removeItem('token');\n      history.push('/');\n    } else {\n      this.setState({ results }, () => this.currentQuestion());\n    }\n  };\n\n  handleAnswer = () => {\n    const { currentQuestion } = this.state;\n    const forceOrderRandom = 0.5;\n    const { correct_answer: correct, incorrect_answers: incorrect } = currentQuestion;\n    const sortAnswers = [...incorrect, correct].sort(\n      () => Math.random() - forceOrderRandom\n    );\n    this.setState({\n      answers: sortAnswers,\n    });\n  };\n\n  currentQuestion = () => {\n    const { counter, results } = this.state;\n    this.setState(\n      {\n        currentQuestion: results[counter],\n        btnNextQuestion: false,\n        colorQuestions: false,\n        btnDisabled: false,\n        enableTimer: true,\n        timer: 30,\n      },\n      () => this.handleAnswer()\n    );\n  };\n\n  verifyAnswer = ({ target }) => {\n    const userAnswer = target.innerHTML;\n    const { currentQuestion, timer } = this.state;\n    const fixPoint = 10;\n    const { correct_answer: correct, difficulty } = currentQuestion;\n    clearInterval(this.timer);\n    const test =\n      userAnswer === correct &&\n      this.setState(\n        ({ assertions, score }) => ({\n          assertions: assertions + 1,\n          score: score + timer * this.difficulty(difficulty) + fixPoint,\n        }),\n        () => {\n          const { score, assertions } = this.state;\n          const { setScore, setAssertions } = this.props;\n          setScore(score);\n          setAssertions(assertions);\n          this.scoreLocalStorage(score);\n        }\n      );\n    this.setState({\n      btnNextQuestion: true,\n      colorQuestions: true,\n      btnDisabled: false,\n    });\n    return test;\n  };\n\n  scoreLocalStorage = (score) => {\n    const { namePlayer } = this.props;\n    const allPlayers = JSON.parse(localStorage.getItem('ranking'));\n    const player = allPlayers.find((user) => user.name === namePlayer);\n    player.score = score;\n    allPlayers[0] = player;\n    localStorage.setItem('ranking', JSON.stringify(allPlayers));\n  };\n\n  difficulty = (difficulty) => {\n    const pointHard = 3;\n    switch (difficulty) {\n      case 'easy':\n        return 1;\n      case 'medium':\n        return 2;\n      case 'hard':\n        return pointHard;\n      default:\n        return 0;\n    }\n  };\n\n  nextQuestion = () => {\n    const { counter } = this.state;\n    const counterQuestions = 5;\n    const maxQuestions = 4;\n    const { history } = this.props;\n    const max =\n      counter < counterQuestions &&\n      (this.intervalTimer(),\n      this.setState(\n        (prevState) => ({\n          counter: prevState.counter + 1,\n        }),\n        () => {\n          if (counter === maxQuestions) {\n            history.push('/feedback');\n          } else {\n            this.currentQuestion();\n          }\n        }\n      ));\n    return max;\n  };\n\n  fetchQuestions = async () => {\n    const token = localStorage.getItem('token');\n    const API = `https://opentdb.com/api.php?amount=5&token=${token}`;\n    const data = await (await fetch(API)).json();\n    this.validateToken(data);\n  };\n\n  handleTimer = () => {\n    this.setState({\n      timer: 30,\n      btnDisabled: true,\n      btnNextQuestion: true,\n      enableTimer: false,\n    });\n  };\n\n  render() {\n    const initialCounter = -1;\n    let counterWrong = initialCounter;\n    const counterAnswersWrong = () => {\n      const maxWrongs = 3;\n      const result = counterWrong < maxWrongs && (counterWrong += 1);\n      return result;\n    };\n    const {\n      currentQuestion,\n      answers,\n      btnNextQuestion,\n      colorQuestions,\n      timer,\n      btnDisabled,\n      enableTimer,\n    } = this.state;\n    const { category, question, correct_answer: correct } = currentQuestion;\n    return (\n      <>\n        <Header />\n        <div className=\"containerBody\">\n          <p>{category}</p>\n          <p className=\"currentQuestion\">{he.decode(`${question}`)}</p>\n          {enableTimer ? (\n            <span className=\"handleSeconds\">{`${timer} segundos`}</span>\n          ) : (\n            <span>Acabou o tempo!</span>\n          )}\n\n          <div className=\"answer-options\">\n            {answers.map((answer, i) =>\n              answer === correct ? (\n                <button\n                  disabled={btnDisabled}\n                  className={colorQuestions ? 'btn btn-success' : 'btn btn-secondary'}\n                  type=\"button\"\n                  data-testid=\"correct-answer\"\n                  key={i}\n                  onClick={this.verifyAnswer}\n                >\n                  {he.decode(`${answer}`)}\n                </button>\n              ) : (\n                <button\n                  className={colorQuestions ? 'btn btn-danger' : 'btn btn-secondary'}\n                  type=\"button\"\n                  disabled={btnDisabled}\n                  key={i}\n                  data-testid={`wrong-answer-${counterAnswersWrong()}`}\n                  onClick={this.verifyAnswer}\n                >\n                  {he.decode(`${answer}`)}\n                </button>\n              )\n            )}\n            {btnNextQuestion && (\n              <button\n                type=\"button\"\n                onClick={this.nextQuestion}\n                className=\"btn btn-secondary\"\n              >\n                Next\n              </button>\n            )}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\nGame.propTypes = {\n  history: PropTypes.shape({ push: PropTypes.func.isRequired }).isRequired,\n  setScore: PropTypes.func.isRequired,\n  setAssertions: PropTypes.func.isRequired,\n  namePlayer: PropTypes.string.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  setScore: (score) => dispatch(scoreAction(score)),\n  setAssertions: (assertions) => dispatch(assertionsAction(assertions)),\n});\nconst mapStateToProps = (state) => ({\n  namePlayer: state.player.name,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n// import PropTypes from 'prop-types';\n\nclass Settings extends Component {\n  render() {\n    return <h1>Settings</h1>;\n  }\n}\nexport default connect()(Settings);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport './Feedback.css';\n\nclass Feedback extends Component {\n  handleFeedback = () => {\n    const { assertions } = this.props;\n    const threeAssertions = 3;\n    return assertions >= threeAssertions;\n  };\n\n  render() {\n    const { score, assertions, history } = this.props;\n    return (\n      <>\n        <Header />\n        <div className=\"containerBody\">\n          <h1>Feedback</h1>\n          {this.handleFeedback() ? <p>Well Done!</p> : <p>Could be better...</p>}\n          <p>Pontos: {score} </p>\n          <p>Acertos: {assertions}</p>\n          <button\n            className=\"btn btn-primary\"\n            type=\"button\"\n            onClick={() => history.push('/')}\n          >\n            Play Again\n          </button>\n          <button\n            className=\"btn btn-primary\"\n            type=\"button\"\n            onClick={() => history.push('/ranking')}\n          >\n            Ranking\n          </button>\n        </div>\n      </>\n    );\n  }\n}\n\nFeedback.propTypes = {\n  score: PropTypes.number.isRequired,\n  assertions: PropTypes.number.isRequired,\n  history: PropTypes.shape({ push: PropTypes.func.isRequired }).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  score: state.player.score,\n  assertions: state.player.assertions,\n});\n\nexport default connect(mapStateToProps)(Feedback);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './Ranking.css';\n// import audioBackground from '../audios/audio_background_credits.mp3';\n\nclass Ranking extends Component {\n  state = {\n    players: JSON.parse(localStorage.getItem('ranking')) || [],\n  };\n\n  componentDidMount() {\n    this.handleRanking();\n    // const audio = new Audio(audioBackground);\n    // audio.volume = 0.2;\n    // audio.loop = true;\n    // audio.play();\n  }\n\n  handleRanking = () => {\n    const { players } = this.state;\n    return players\n      .sort((a, b) => b.score - a.score)\n      .map(({ name, score }, i) => (\n        <div key={i}>\n          <p>Nome : {name}</p>\n          <p>Pontos: {score}</p>\n          <hr />\n        </div>\n      ));\n  };\n\n  render() {\n    const { history } = this.props;\n    return (\n      <>\n        <div>\n          <button\n            type=\"button\"\n            onClick={() => history.push('/')}\n            className=\"btn btn-primary\"\n          >\n            Home\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => history.push('/feedback')}\n            className=\"btn btn-primary\"\n          >\n            Feedback\n          </button>\n        </div>\n        <div className=\"fade\"></div>\n        <section className=\"slide\">\n          <div className=\"crawl\">\n            <div className=\"title\">\n              <h1>Ranking</h1>\n            </div>\n            {this.handleRanking()}\n          </div>\n        </section>\n      </>\n    );\n  }\n}\n\nRanking.propTypes = {\n  history: PropTypes.shape({ push: PropTypes.func.isRequired }).isRequired,\n};\nexport default connect()(Ranking);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Game from './pages/Game';\nimport Settings from './pages/Settings';\nimport Feedback from './pages/Feedback';\nimport Ranking from './pages/Ranking';\nimport './App.css';\n\nexport default function App() {\n  return (\n    <Switch>\n      <Route exact path=\"/game\" component={Game} />\n      <Route exact path=\"/settings\" component={Settings} />\n      <Route exact path=\"/feedback\" component={Feedback} />\n      <Route exact path=\"/ranking\" component={Ranking} />\n      <Route exact path=\"/\" component={Login} />\n    </Switch>\n  );\n}\n","import { SET_PLAYER, SET_SCORE, SET_ASSERTIONS } from '../actions';\n\nconst INITIAL_STATE = {\n  name: '',\n  assertions: 0,\n  score: 0,\n  gravatarEmail: '',\n};\n\nconst playerReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SET_PLAYER:\n    return {\n      ...state,\n      name: action.userInfo.name,\n      gravatarEmail: action.userInfo.email,\n    };\n  case SET_SCORE:\n    return {\n      ...state,\n      score: action.score,\n    };\n  case SET_ASSERTIONS:\n    return {\n      ...state,\n      assertions: action.assertions,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default playerReducer;\n","import { combineReducers } from 'redux';\nimport player from './playerReducer';\nimport game from './gameReducer';\n\nconst rootReducer = combineReducers({ player, game });\n\nexport default rootReducer;\n","import { legacy_createStore as createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport RootReducer from './reducers';\n\nconst store = createStore(RootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nif (window.Cypress) {\n  window.store = store;\n}\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}